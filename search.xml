<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>变量与数据类型</title>
      <link href="/posts/f5b2a257/"/>
      <url>/posts/f5b2a257/</url>
      
        <content type="html"><![CDATA[<h1 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h1><p><strong>定义：变量是存储数据值的容器。</strong></p><p>所有 Java 变量必须用唯一的名称标识，这些唯一的名称称为<strong>标识符</strong>。</p><p>变量名称（唯一标识符）的一般命名规则如下：</p><ul><li>名称可以包含字母、数字、下划线和$符号</li><li>姓名必须以字母开头</li><li>名称应以小写字母开头，并且不能包含空格</li><li>名称也可以以$和_开头（但在本教程中我们将不使用它）</li><li>名称区分大小写 (“myVar” 和 “myvar” 是不同的变量)</li><li>保留字（如 Java关键字：int、boolean）不能用作名称</li></ul><h1 id="基本数据类型"><a href="#基本数据类型" class="headerlink" title="基本数据类型"></a>基本数据类型</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">myNum</span> <span class="operator">=</span> <span class="number">5</span>;               <span class="comment">// 整数（整数）</span></span><br><span class="line"><span class="type">float</span> <span class="variable">myFloatNum</span> <span class="operator">=</span> <span class="number">5.99f</span>;    <span class="comment">// 浮点数</span></span><br><span class="line"><span class="type">char</span> <span class="variable">myLetter</span> <span class="operator">=</span> <span class="string">&#x27;D&#x27;</span>;         <span class="comment">// 字符</span></span><br><span class="line"><span class="type">boolean</span> <span class="variable">myBool</span> <span class="operator">=</span> <span class="literal">true</span>;       <span class="comment">// Boolean</span></span><br><span class="line"><span class="type">String</span> <span class="variable">myText</span> <span class="operator">=</span> <span class="string">&quot;Hello&quot;</span>;     <span class="comment">// 字符串</span></span><br></pre></td></tr></table></figure><p>一个字节是1byte，1024字节是1K，1024K是M，1024M是1G，1024G是1T</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">       ┌───┐</span><br><span class="line">  byte │   │</span><br><span class="line">       └───┘</span><br><span class="line">       ┌───┬───┐</span><br><span class="line"> short │   │   │</span><br><span class="line">       └───┴───┘</span><br><span class="line">       ┌───┬───┬───┬───┐</span><br><span class="line">   int │   │   │   │   │</span><br><span class="line">       └───┴───┴───┴───┘</span><br><span class="line">       ┌───┬───┬───┬───┬───┬───┬───┬───┐</span><br><span class="line">  long │   │   │   │   │   │   │   │   │</span><br><span class="line">       └───┴───┴───┴───┴───┴───┴───┴───┘</span><br><span class="line">       ┌───┬───┬───┬───┐</span><br><span class="line"> float │   │   │   │   │</span><br><span class="line">       └───┴───┴───┴───┘</span><br><span class="line">       ┌───┬───┬───┬───┬───┬───┬───┬───┐</span><br><span class="line">double │   │   │   │   │   │   │   │   │</span><br><span class="line">       └───┴───┴───┴───┴───┴───┴───┴───┘</span><br><span class="line">       ┌───┬───┐</span><br><span class="line">  char │   │   │</span><br><span class="line">       └───┴───┘</span><br></pre></td></tr></table></figure><h1 id="java数据类型转换"><a href="#java数据类型转换" class="headerlink" title="java数据类型转换"></a>java数据类型转换</h1><p>数据类型转换是把数据从一种类型转换为另一种类型。</p><p>在Java中，有两种类型的数据转换：</p><ul><li><p><strong>隐式类型转换</strong> (自动) - 从小类型到大类型，不需要强制转换符<br><code>byte</code> 、 <code>short</code> 、 <code>char</code> -&gt; <code>int</code> -&gt; <code>long</code> -&gt; <code>float</code> -&gt; <code>double</code></p><p><img src="/posts/f5b2a257/source_posts%5C%E5%8F%98%E9%87%8F%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%5Cimage-20240115155011601-1705305020635.png" alt="image-20240115155011601"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//将较小的类型转换为较大的类型时使用，不需要强制转换符</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyClass</span> &#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">myInt</span> <span class="operator">=</span> <span class="number">9</span>;</span><br><span class="line">    <span class="type">double</span> <span class="variable">myDouble</span> <span class="operator">=</span> myInt; <span class="comment">// 自动转换: int 到 double</span></span><br><span class="line"></span><br><span class="line">    System.out.println(myInt);      <span class="comment">// 输出 9</span></span><br><span class="line">    System.out.println(myDouble);   <span class="comment">// 输出 9.0</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>强制类型转换</strong> (手动) - 从大类型到小类型，需要强制转换符实现强制转换<br><code>double</code> -&gt; <code>float</code> -&gt; <code>long</code> -&gt; <code>int</code> -&gt; <code>char</code> -&gt; <code>short</code> -&gt; <code>byte</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//将较大的类型转换为较小的类型时使用，需要强制转换符实现强制转换</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyClass</span> &#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">double</span> <span class="variable">myDouble</span> <span class="operator">=</span> <span class="number">9.78</span>;</span><br><span class="line">    <span class="type">int</span> <span class="variable">myInt</span> <span class="operator">=</span> (<span class="type">int</span>) myDouble; <span class="comment">// 手动转换：double 到 int</span></span><br><span class="line"></span><br><span class="line">    System.out.println(myDouble);   <span class="comment">// 输出 9.78</span></span><br><span class="line">    System.out.println(myInt);      <span class="comment">// 输出 9</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line">    <span class="type">byte</span> <span class="variable">b</span> <span class="operator">=</span>  (<span class="type">byte</span>)a;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h1><p>Java 将运算符划分为下列类型：</p><ul><li><p>算术运算符</p><table><thead><tr><th>运算符</th><th>名称</th><th>描述</th><th>实例</th></tr></thead><tbody><tr><td>+</td><td>加法</td><td>将两个值相加</td><td>x + y</td></tr><tr><td>-</td><td>减法</td><td>从一个值减去另一个值</td><td>x - y</td></tr><tr><td>*</td><td>乘法</td><td>将两个值相乘</td><td>x * y</td></tr><tr><td>&#x2F;</td><td>除法</td><td>分子除以分母</td><td>x &#x2F; y</td></tr><tr><td>%</td><td>取模</td><td>取模运算符，整除后的余数</td><td>x % y</td></tr><tr><td>++</td><td>自增</td><td>自增运算符，整数值增加 1</td><td>++x</td></tr><tr><td>–</td><td>自减</td><td>自减运算符，整数值减少 1</td><td>–x</td></tr></tbody></table><p><strong><code>++n</code>表示先加1再引用n，<code>n++</code>表示先引用n再加1</strong></p></li><li><p>赋值运算符</p><table><thead><tr><th>运算符</th><th>实例</th><th>等同于</th><th>解释</th></tr></thead><tbody><tr><td>&#x3D;</td><td>x &#x3D; 5</td><td>x &#x3D; 5</td><td>赋值</td></tr><tr><td>+&#x3D;</td><td>x +&#x3D; 3</td><td>x &#x3D; x + 3</td><td>加</td></tr><tr><td>-&#x3D;</td><td>x -&#x3D; 3</td><td>x &#x3D; x - 3</td><td>减</td></tr><tr><td>*&#x3D;</td><td>x *&#x3D; 3</td><td>x &#x3D; x * 3</td><td>乘</td></tr><tr><td>&#x2F;&#x3D;</td><td>x &#x2F;&#x3D; 3</td><td>x &#x3D; x &#x2F; 3</td><td>除</td></tr><tr><td>%&#x3D;</td><td>x %&#x3D; 3</td><td>x &#x3D; x % 3</td><td>取余</td></tr><tr><td>&amp;&#x3D;</td><td>x &amp;&#x3D; 3</td><td>x &#x3D; x &amp; 3</td><td>按位与运算<br>将两个数的二进制表示进行逐位比较<br>如果相应位上的两个数都为1，<br>则结果为1，否则为0。</td></tr><tr><td>|&#x3D;</td><td>x |&#x3D; 3</td><td>x &#x3D; x | 3</td><td>按位或运算<br>将两个数的二进制表示进行逐位比较<br>如果相应位上的两个数中至少有一个为1，<br>则结果为1，否则为0。</td></tr><tr><td>^&#x3D;</td><td>x ^&#x3D; 3</td><td>x &#x3D; x ^ 3</td><td>按位异或运算<br>将两个数的二进制表示进行逐位比较<br>如果相应位上的两个数不相同，则结果为1，否则为0。</td></tr><tr><td>&gt;&gt;&#x3D;</td><td>x &gt;&gt;&#x3D; 3</td><td>x &#x3D; x &gt;&gt; 3</td><td>表示将变量x的二进制表示向右移动3位<br>将一个数的二进制表示向右移动指定的位数<br>移出的位将被丢弃，右边空出的位用0填充。</td></tr><tr><td>&lt;&lt;&#x3D;</td><td>x &lt;&lt;&#x3D; 3</td><td>x &#x3D; x &lt;&lt; 3</td><td>表示将变量x的二进制表示向左移动3位<br>将一个数的二进制表示向左移动指定的位数<br>左边空出的位用0填充，右边移出的位将被丢弃。</td></tr></tbody></table></li><li><p>关系运算符</p><table><thead><tr><th>运算符</th><th>名称</th><th>实例</th></tr></thead><tbody><tr><td>&#x3D;&#x3D;</td><td>等于</td><td>x &#x3D;&#x3D; y</td></tr><tr><td>!&#x3D;</td><td>不等于</td><td>x !&#x3D; y</td></tr><tr><td>&gt;</td><td>大于</td><td>x &gt; y</td></tr><tr><td>&lt;</td><td>小于</td><td>x &lt; y</td></tr><tr><td>&gt;&#x3D;</td><td>大于或等于</td><td>x &gt;&#x3D; y</td></tr><tr><td>&lt;&#x3D;</td><td>小于或等于</td><td>x &lt;&#x3D; y</td></tr></tbody></table></li><li><p>逻辑运算符</p><table><thead><tr><th>运算符</th><th>名称</th><th>描述</th><th>实例</th></tr></thead><tbody><tr><td>&amp;&amp;</td><td>逻辑与</td><td>如果两个语句都为true，则返回true</td><td>x &lt; 5 &amp;&amp; x &lt; 10</td></tr><tr><td>||</td><td>逻辑或</td><td>如果其中一条语句为true，则返回true</td><td>x &lt; 5 || x &lt; 4</td></tr><tr><td>!</td><td>逻辑非</td><td>反转结果，如果结果为真则返回false</td><td>!(x &lt; 5 &amp;&amp; x &lt; 10)</td></tr></tbody></table></li><li><p>位运算符</p><table><thead><tr><th>运算符</th><th>描述</th><th>例子</th><th>等同于</th><th>结果</th><th>十进制</th></tr></thead><tbody><tr><td>&amp;</td><td>AND - 如果两个位都为 1，则将每个位设置为 1</td><td>5 &amp; 1</td><td>0101 &amp; 0001</td><td>0001</td><td>1</td></tr><tr><td>|</td><td>OR - 如果两个位中的任何一个为 1，则将每个位设置为 1</td><td>5 | 1</td><td>0101 | 0001</td><td>0101</td><td>5</td></tr><tr><td>~</td><td>NOT - 反转所有位</td><td>~ 5</td><td>~0101</td><td>1010</td><td>10</td></tr><tr><td>^</td><td>XOR - 如果两个位中只有一个为 1，则将每个位设置为 1</td><td>5 ^ 1</td><td>0101 ^ 0001</td><td>0100</td><td>4</td></tr><tr><td>&lt;&lt;</td><td>Zero-fill left shift - 通过从右侧推入零并让最左边的位脱落来向左移动</td><td>9 &lt;&lt; 1</td><td>1001 &lt;&lt; 1</td><td>0010</td><td>2</td></tr><tr><td>&gt;&gt;</td><td>Signed right shift - 通过从左侧推入最左侧位的副本并让最右侧位脱落来右移</td><td>9 &gt;&gt; 1</td><td>1001 &gt;&gt; 1</td><td>1100</td><td>12</td></tr><tr><td>&gt;&gt;&gt;</td><td>Zero-fill right shift - 通过从左边推入零并让最右边的位脱落来右移</td><td>9 &gt;&gt;&gt; 1</td><td>1001 &gt;&gt;&gt; 1</td><td>0100</td><td>4</td></tr></tbody></table></li></ul>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java基础-study01</title>
      <link href="/posts/7f1ae6d2/"/>
      <url>/posts/7f1ae6d2/</url>
      
        <content type="html"><![CDATA[<h1 id="Java简介"><a href="#Java简介" class="headerlink" title="Java简介"></a>Java简介</h1><p><em><strong>Java是面向对象的语言</strong></em></p><h2 id="Java的三个版本"><a href="#Java的三个版本" class="headerlink" title="Java的三个版本"></a>Java的三个版本</h2><ul><li>Java SE：Standard Edition</li><li>Java EE：Enterprise Edition</li><li>Java ME：Micro Edition</li></ul><img src="https://imgse.com/i/pkHCCjA" class><p><a href="https://imgse.com/i/pkHCCjA"><img src="https://s21.ax1x.com/2024/07/23/pkHCCjA.png" alt="pkHCCjA.png"></a></p><p>简单来说，Java SE就是标准版，包含标准的JVM和标准库，而Java EE是企业版，它只是在Java SE的基础上加上了大量的API和库，以便方便开发Web应用、数据库、消息服务等，Java EE的应用使用的虚拟机和Java SE完全相同。</p><p>Java ME就和Java SE不同，它是一个针对嵌入式设备的“瘦身版”，Java SE的标准库无法在Java ME上使用，Java ME的虚拟机也是“瘦身版”。</p><h1 id="Java程序基础"><a href="#Java程序基础" class="headerlink" title="Java程序基础"></a>Java程序基础</h1><h2 id="一-Java程序基本结构"><a href="#一-Java程序基本结构" class="headerlink" title="一.Java程序基本结构"></a>一.Java程序基本结构</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 可以用来自动创建文档的注释</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Hello</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 向屏幕输出文本:</span></span><br><span class="line">        System.out.println(<span class="string">&quot;Hello, world!&quot;</span>);</span><br><span class="line">        <span class="comment">/* 多行注释开始</span></span><br><span class="line"><span class="comment">        注释内容</span></span><br><span class="line"><span class="comment">        注释结束 */</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="comment">// class定义结束</span></span><br></pre></td></tr></table></figure><img src="/posts/7f1ae6d2/7f1ae6d2/java_syntax.jpg" class title="this is an image"><p>一个程序的基本单位就是<code>class</code>，<code>class</code>是<a href="Java%E5%85%B3%E9%94%AE%E5%AD%97.md">关键字</a>，这里定义的<code>class</code>名字就是<code>Hello</code>：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Hello</span> &#123; <span class="comment">// 类名是Hello</span></span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125; <span class="comment">// class定义结束</span></span><br></pre></td></tr></table></figure><p>类名要求：</p><p>推荐–&gt;[驼峰命名规则]：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">printEmployeePaychecks();<span class="comment">//骆驼式命名</span></span><br><span class="line">print_employee_paychecks();<span class="comment">//下划线法命名</span></span><br></pre></td></tr></table></figure><ul><li>类名必须以英文字母开头，后接字母，数字和下划线的组合</li><li>习惯以大写字母开头</li></ul><h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><p>注释可用于解释Java代码，并使其更具可读性。还可用于在测试替代代码时防止执行。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//单行注释</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">多行注释</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 可以用来自动创建文档的注释</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@auther</span> liaoxuefeng</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Hello</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Hello, world!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/posts/4a17b156/"/>
      <url>/posts/4a17b156/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> hello </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
